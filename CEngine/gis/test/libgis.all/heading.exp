set timeout 3
#
# expectations that clean up in case of error. Note that `$test' is
# a purely local variable.
#
# The first of these is used to match any bad responses, and resynchronise
# things by finding a prompt. The second is a timeout error, and shouldn't
# ever be triggered.
#
expect_after {
	-re "\[^\n\r\]*$prompt$" {
		fail "$test (bad match)"
		if { $verbose > 0 } {
			regexp ".*\r\n(\[^\r\n\]+)(\[\r\n\])+$prompt$" \
						$expect_out(buffer) "" output
			send_user "\tUnmatched output: \"$output\"\n"
		}
	}
	timeout {
		fail "$test (timeout)"
	}
}



#
# The following tests assume the points are on a km grid.
#

#
# Test with point B 1 km east of point A.
#
heading_test 0 0 1 0 90 "B 1 km E of A"



#
# Test with point B 2 km west of point A.
#
heading_test 0 0 -2 0 270 "B 2 km W of A"



#
# Test with point B 5 km north of point A.
#
heading_test 0 0 0 5 0 "B 5 km N of A"



#
# Test with point B 10 km south of point A.
#
heading_test 0 0 0 -10 180 "B 10 km S of A"



#
# Test with point B 1 km northeast of point A.
#
heading_test 0 0 [expr sqrt(0.5)] [expr sqrt(0.5)] 45 "B 1 km NE of A"



#
# Test with point B 1 km southwest of point A.
#
heading_test 0 0 [expr -sqrt(0.5)] [expr -sqrt(0.5)] 225 "B 1 km SW of A"
