# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import ScenarioCreator.custom_fields
import django_extras.db.models.fields
import django.core.validators


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AirborneSpread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('spread_1km_probability', ScenarioCreator.custom_fields.PercentField(help_text='The probability that disease will be spread to unit 1 km away from the source unit.', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(0.999)])),
                ('max_distance', models.FloatField(blank=True, help_text='The maximum distance in KM of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#airborne-transmission" class="wiki">airborne spread</a>.  Only used in Linear Airborne Decay.', validators=[django.core.validators.MinValueValidator(1.1)], null=True)),
                ('exposure_direction_start', models.PositiveIntegerField(help_text='The start angle in degrees of the area at risk of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#airborne-transmission" class="wiki">airborne spread</a>.  0 is North.', default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(360)])),
                ('exposure_direction_end', models.PositiveIntegerField(help_text='The end angle in degrees of the area at risk of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#airborne-transmission" class="wiki">airborne spread</a>.  0 is North.', default=360, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(360)])),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ControlMasterPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Control Master Plan', max_length=255)),
                ('disable_all_controls', models.BooleanField(help_text='Disable all <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#control-measures" class="wiki">Control activities</a> for this simulation run.  Normally used temporarily to test uncontrolled disease spread.', default=False)),
                ('destruction_program_delay', models.PositiveIntegerField(blank=True, help_text='The number of days that must pass after the first detection before a destruction program can begin.', null=True)),
                ('destruction_priority_order', models.CharField(help_text='The primary priority order for destruction.', default='reason, time waiting, production type', max_length=255, choices=[('reason, time waiting, production type', 'reason, time waiting, production type'), ('reason, production type, time waiting', 'reason, production type, time waiting'), ('time waiting, reason, production type', 'time waiting, reason, production type'), ('time waiting, production type, reason', 'time waiting, production type, reason'), ('production type, reason, time waiting', 'production type, reason, time waiting'), ('production type, time waiting, reason', 'production type, time waiting, reason')])),
                ('destruction_reason_order', models.CharField(help_text='The secondary priority order for destruction.', default='Basic, Trace fwd direct, Trace fwd indirect, Trace back direct, Trace back indirect, Ring', max_length=255)),
                ('units_detected_before_triggering_vaccination', models.PositiveIntegerField(blank=True, help_text='The number of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#unit" class="wiki">Units</a> which must be detected before the initiation of a vaccination program.', null=True)),
                ('vaccination_priority_order', models.CharField(help_text='The primary priority criteria for order of vaccinations.', default='reason, time waiting, production type', max_length=255, choices=[('reason, time waiting, production type', 'reason, time waiting, production type'), ('reason, production type, time waiting', 'reason, production type, time waiting'), ('time waiting, reason, production type', 'time waiting, reason, production type'), ('time waiting, production type, reason', 'time waiting, production type, reason'), ('production type, reason, time waiting', 'production type, reason, time waiting'), ('production type, time waiting, reason', 'production type, time waiting, reason')])),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ControlProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name your Protocol so you can recognize it later. Ex:"Quarantine"', max_length=255)),
                ('use_detection', models.BooleanField(help_text='Indicates if disease detection will be modeled for units of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a>.', default=True)),
                ('detection_is_a_zone_trigger', models.BooleanField(help_text='Indicator if detection of infected units of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a> will trigger a <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#zone" class="wiki">Zone</a> focus.', default=False)),
                ('use_tracing', models.BooleanField(default=False)),
                ('trace_direct_forward', models.BooleanField(help_text='Indicator that <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-forward" class="wiki">trace forward</a> will be conducted for <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct contact</a>s where the reported unit was the source of contact and was of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a>.', default=False)),
                ('trace_direct_back', models.BooleanField(help_text='Indicator that <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-back" class="wiki">trace back</a> will be conducted for <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct contact</a>s where the reported unit was the source of contact and was of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a>.', default=False)),
                ('direct_trace_success_rate', ScenarioCreator.custom_fields.PercentField(blank=True, help_text='Probability of success of trace for <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct contact</a>.', null=True)),
                ('direct_trace_period', models.PositiveIntegerField(blank=True, help_text='Days before detection (critical period) for tracing of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct contact</a>s.', null=True)),
                ('trace_indirect_forward', models.BooleanField(help_text='Indicator that <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-forward" class="wiki">trace forward</a> will be conducted for <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a>s where the reported unit was the source of contact and was of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a>.', default=False)),
                ('trace_indirect_back', models.BooleanField(help_text='Indicator that <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-back" class="wiki">trace back</a> will be conducted for <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a>s where the reported unit was the source of contact and was of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a>.', default=False)),
                ('indirect_trace_success', ScenarioCreator.custom_fields.PercentField(blank=True, help_text='Probability of success of trace for <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a>.', null=True)),
                ('indirect_trace_period', models.PositiveIntegerField(blank=True, help_text='Days before detection  (critical period) for tracing of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a>s.', null=True)),
                ('direct_trace_is_a_zone_trigger', models.BooleanField(help_text='Indicator if direct tracing of infected units of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a> will trigger a <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#zone" class="wiki">Zone</a> focus.', default=False)),
                ('indirect_trace_is_a_zone_trigger', models.BooleanField(help_text='Indicator if indirect tracing of infected units of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a> will trigger a <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#zone" class="wiki">Zone</a> focus.', default=False)),
                ('use_destruction', models.BooleanField(help_text='Indicates if detected units of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a> will be destroyed.', default=False)),
                ('destruction_is_a_ring_trigger', models.BooleanField(help_text='Indicates if detection of a unit of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a> will trigger the formation of a destruction ring.', default=False)),
                ('destruction_ring_radius', models.FloatField(blank=True, help_text='Radius in kilometers of the destruction ring.', validators=[django.core.validators.MinValueValidator(0.0)], null=True)),
                ('destruction_is_a_ring_target', models.BooleanField(help_text='Indicates if unit of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a> will be subject to preemptive ring destruction.', default=False)),
                ('destroy_direct_forward_traces', models.BooleanField(help_text='Indicates if units of this type identified by <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-forward" class="wiki">trace forward</a> of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct contact</a>s will be subject to preemptive destruction.', default=False)),
                ('destroy_indirect_forward_traces', models.BooleanField(help_text='Indicates if units of this type identified by <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-forward" class="wiki">trace forward</a> of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a>s will be subject to preemptive destruction.', default=False)),
                ('destroy_direct_back_traces', models.BooleanField(help_text='Indicates if units of this type identified by <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-back" class="wiki">trace back</a> of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct contact</a>s will be subject to preemptive destruction.', default=False)),
                ('destroy_indirect_back_traces', models.BooleanField(help_text='Indicates if units of this type identified by <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-back" class="wiki">trace back</a> of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a>s will be subject to preemptive destruction.', default=False)),
                ('destruction_priority', models.PositiveIntegerField(blank=True, help_text='The destruction priority of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a> relative to other production types.  A lower number indicates a higher priority.', default=5, null=True)),
                ('use_vaccination', models.BooleanField(help_text='Indicates if units of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a> will be subject to vaccination.', default=False)),
                ('vaccinate_detected_units', models.BooleanField(help_text='Indicates if detection in units of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a> will trigger vaccination.', default=False)),
                ('days_to_immunity', models.PositiveIntegerField(blank=True, help_text='The number of days required for the onset of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#vaccine-immune" class="wiki">vaccine immunity</a> in a newly vaccinated unit of this type.', null=True)),
                ('minimum_time_between_vaccinations', models.PositiveIntegerField(blank=True, help_text='The minimum time in days between vaccination for units of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a>.', null=True)),
                ('trigger_vaccination_ring', models.BooleanField(help_text='Indicates if detection of a unit of this type will trigger a vaccination ring.', default=False)),
                ('vaccination_ring_radius', models.FloatField(blank=True, help_text='Radius in kilometers of the vaccination ring.', validators=[django.core.validators.MinValueValidator(0.0)], null=True)),
                ('vaccination_priority', models.PositiveIntegerField(blank=True, help_text='The vaccination priority of this production type relative to other production types.  A lower number indicates a higher priority.', default=5, null=True)),
                ('vaccination_demand_threshold', models.PositiveIntegerField(blank=True, help_text='The number of animals of this type that can be vaccinated before the cost of vaccination increases.', null=True)),
                ('cost_of_vaccination_additional_per_animal', django_extras.db.models.fields.MoneyField(help_text='The additional cost of vaccination for each vaccinated animal of this type after the threshold is exceeded.', max_digits=20, default=0.0, decimal_places=4)),
                ('use_exams', models.BooleanField(default=False)),
                ('examine_direct_forward_traces', models.BooleanField(help_text='Indicator if units identified by the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-forward" class="wiki">trace forward</a> of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct contact</a> will be examined for <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#clinically-infectious" class="wiki">clinical signs</a> of disease.', default=False)),
                ('exam_direct_forward_success_multiplier', models.FloatField(blank=True, help_text='Multiplier for the probability of observing <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#clinically-infectious" class="wiki">clinical signs</a> in units identified by the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-forward" class="wiki">trace forward</a> of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct contact</a>.', validators=[django.core.validators.MinValueValidator(0.0)], null=True)),
                ('examine_indirect_forward_traces', models.BooleanField(help_text='Indicator if units identified by the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-forward" class="wiki">trace forward</a> of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a> will be examined for <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#clinically-infectious" class="wiki">clinical signs</a> of disease.', default=False)),
                ('exam_indirect_forward_success_multiplier', models.FloatField(blank=True, help_text='Multiplier for the probability of observing <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#clinically-infectious" class="wiki">clinical signs</a> in units identified by the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-forward" class="wiki">trace forward</a> of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a> .', validators=[django.core.validators.MinValueValidator(0.0)], null=True)),
                ('examine_direct_back_traces', models.BooleanField(help_text='Indicator if units identified by the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-back" class="wiki">trace back</a> of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct contact</a> will be examined for <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#clinically-infectious" class="wiki">clinical signs</a> of disease.', default=False)),
                ('exam_direct_back_success_multiplier', models.FloatField(blank=True, help_text='Multiplier for the probability of observing <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#clinically-infectious" class="wiki">clinical signs</a> in units identified by the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-back" class="wiki">trace back</a> of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct contact</a>.', validators=[django.core.validators.MinValueValidator(0.0)], null=True)),
                ('examine_indirect_back_traces', models.BooleanField(help_text='Indicator if units identified by the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-back" class="wiki">trace back</a> of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a> will be examined for <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#clinically-infectious" class="wiki">clinical signs</a> of disease.', default=False)),
                ('examine_indirect_back_success_multiplier', models.FloatField(blank=True, help_text='Multiplier for the probability of observing <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#clinically-infectious" class="wiki">clinical signs</a> in units identified by the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-back" class="wiki">trace back</a> of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a>.', validators=[django.core.validators.MinValueValidator(0.0)], null=True)),
                ('use_testing', models.BooleanField(default=False)),
                ('test_direct_forward_traces', models.BooleanField(help_text='Indicator that diagnostic testing should be performed on units identified by <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-forward" class="wiki">trace forward</a> of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct contact</a>s.', default=False)),
                ('test_indirect_forward_traces', models.BooleanField(help_text='Indicator that diagnostic testing should be performed on units identified by <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-forward" class="wiki">trace forward</a> of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a>s.', default=False)),
                ('test_direct_back_traces', models.BooleanField(help_text='Indicator that diagnostic testing should be performed on units identified by <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-back" class="wiki">trace back</a> of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct contact</a>s.', default=False)),
                ('test_indirect_back_traces', models.BooleanField(help_text='Indicator that diagnostic testing should be performed on units identified by <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#trace-back" class="wiki">trace back</a> of <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a>s.', default=False)),
                ('test_specificity', models.FloatField(blank=True, help_text='<a href="http://en.wikipedia.org/wiki/Sensitivity_and_specificity" class="wiki">Test Specificity</a> for units of this production type', validators=[django.core.validators.MinValueValidator(0.0)], null=True)),
                ('test_sensitivity', models.FloatField(blank=True, help_text='<a href="http://en.wikipedia.org/wiki/Sensitivity_and_specificity" class="wiki">Test Sensitivity</a> for units of this production type', validators=[django.core.validators.MinValueValidator(0.0)], null=True)),
                ('use_cost_accounting', models.BooleanField(default=False)),
                ('cost_of_destruction_appraisal_per_unit', django_extras.db.models.fields.MoneyField(help_text='The cost associated with appraisal for each destroyed unit of this type.', max_digits=20, default=0.0, decimal_places=4)),
                ('cost_of_destruction_cleaning_per_unit', django_extras.db.models.fields.MoneyField(help_text='The cost associated with cleaning and disinfection for each destroyed unit of this type.', max_digits=20, default=0.0, decimal_places=4)),
                ('cost_of_euthanasia_per_animal', django_extras.db.models.fields.MoneyField(help_text='The cost associated with euthanizing each destroyed animal of this type.', max_digits=20, default=0.0, decimal_places=4)),
                ('cost_of_indemnification_per_animal', django_extras.db.models.fields.MoneyField(help_text='The cost of indemnification for each destroyed animal of this type.', max_digits=20, default=0.0, decimal_places=4)),
                ('cost_of_carcass_disposal_per_animal', django_extras.db.models.fields.MoneyField(help_text='The cost of carcass disposal for each destroyed animal of this type.', max_digits=20, default=0.0, decimal_places=4)),
                ('cost_of_vaccination_setup_per_unit', django_extras.db.models.fields.MoneyField(help_text='The cost of site setup for each vaccinated unit of this type.', max_digits=20, default=0.0, decimal_places=4)),
                ('cost_of_vaccination_baseline_per_animal', django_extras.db.models.fields.MoneyField(help_text='The baseline cost of vaccination for each vaccinated animal of this type. This cost applies to all vaccinations before the threshold is met. ', max_digits=20, default=0.0, decimal_places=4)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DirectSpread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('subclinical_animals_can_infect_others', models.BooleanField(help_text='Indicates if <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#subclinically-infectious" class="wiki">Subclinical</a> units of the source type can spread disease by <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct</a> or <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a>. ', default=False)),
                ('contact_rate', models.FloatField(help_text='The average contact rate (in recipient units per source unit per day) for <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct</a> or <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a> models.', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('use_fixed_contact_rate', models.BooleanField(help_text='Use a fixed contact rate or model contact rate as a mean distribution.', default=False)),
                ('infection_probability', ScenarioCreator.custom_fields.PercentField(blank=True, help_text='The probability that a <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#effective-contact" class="wiki">contact will result in disease transmission</a>. Specified for <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct</a> or <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a> models.', null=True)),
                ('latent_animals_can_infect_others', models.BooleanField(help_text='Indicates if <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#latent-state" class="wiki">latent</a> units of the source type can spread disease by <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct contact</a>.', default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the Disease', max_length=255)),
                ('disease_description', models.TextField(blank=True)),
                ('include_direct_contact_spread', models.BooleanField(help_text='Indicates if disease spread by <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct contact</a> is used in the scenario.', default=True)),
                ('include_indirect_contact_spread', models.BooleanField(help_text='Indicates if disease spread by <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a> is used in the scenario.', default=True)),
                ('include_airborne_spread', models.BooleanField(help_text='Indicates if airborne spread is used in the model', default=True)),
                ('use_airborne_exponential_decay', models.BooleanField(help_text='Indicates if the decrease in probability by <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#airborne-transmission" class="wiki">airborne transmission</a> is simulated by the exponential (TRUE) or linear (FALSE) algorithm.', default=False)),
                ('use_within_unit_prevalence', models.BooleanField(help_text='Indicates if <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#within-unit-prevalence" class="wiki">within unit prevalence</a> should be used in the model.', default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DiseaseProgression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Examples: Severe Progression, FMD Long Incubation', max_length=255)),
                ('_disease', models.ForeignKey(to='ScenarioCreator.Disease')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DiseaseProgressionAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DiseaseSpreadAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('airborne_spread', models.ForeignKey(help_text='Disease spread mechanism used to model spread by <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#airborne-transmission" class="wiki">airborne spread</a> between these types.', blank=True, null=True, to='ScenarioCreator.AirborneSpread', related_name='airborne_spread_pair')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IndirectSpread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('subclinical_animals_can_infect_others', models.BooleanField(help_text='Indicates if <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#subclinically-infectious" class="wiki">Subclinical</a> units of the source type can spread disease by <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct</a> or <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a>. ', default=False)),
                ('contact_rate', models.FloatField(help_text='The average contact rate (in recipient units per source unit per day) for <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct</a> or <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a> models.', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('use_fixed_contact_rate', models.BooleanField(help_text='Use a fixed contact rate or model contact rate as a mean distribution.', default=False)),
                ('infection_probability', ScenarioCreator.custom_fields.PercentField(help_text='The probability that a contact will result in disease transmission. Specified for <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct</a> or <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a> models.')),
                ('_disease', models.ForeignKey(help_text='Parent disease whose spreading characteristics this describes.', to='ScenarioCreator.Disease')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OutputSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iterations', models.PositiveIntegerField(help_text='The number of iterations of this scenario that should be run', default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('stop_criteria', models.CharField(help_text='The criterion used to end each iteration.', default='disease-end', max_length=255, choices=[('disease-end', 'Stop when there are no more latent or infectious units.'), ('first-detection', 'Stop when the first detection occurs.'), ('outbreak-end', 'Stop when there are no more latent or infectious units and all control activities are finished'), ('stop-days', 'Stop after a specified number of days')])),
                ('days', models.PositiveIntegerField(help_text='The maximum number of days that iterations of this scenario should run.', default=1825, validators=[django.core.validators.MinValueValidator(1)])),
                ('cost_track_destruction', models.BooleanField(help_text='Disable this to ignore entered destruction costs.', default=True)),
                ('cost_track_vaccination', models.BooleanField(help_text='Disable this to ignore entered vaccination costs.', default=True)),
                ('cost_track_zone_surveillance', models.BooleanField(help_text='Disable this to ignore entered <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#zone" class="wiki">Zone</a> surveillance costs.', default=True)),
                ('save_daily_unit_states', models.BooleanField(help_text='Create a plain text file with the state of each unit on each day of each iteration.', default=False)),
                ('save_daily_events', models.BooleanField(help_text='Save all daily events in a supplemental file.', default=False)),
                ('save_daily_exposures', models.BooleanField(help_text='Save all exposures in a supplemental file.', default=False)),
                ('save_iteration_outputs_for_units', models.BooleanField(help_text='Required for the Population Map. Save all iteration outputs for units in a supplemental file.', default=True)),
                ('save_map_output', models.BooleanField(help_text='Create map outputs for units in supplemental directory.', default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Population',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_file', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProbabilityFunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='User-assigned name for each function.', max_length=255)),
                ('x_axis_units', models.CharField(help_text='Specifies the descriptive units for the x axis in relational functions.', default='Days', max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('equation_type', models.CharField(help_text='For probability density functions identifies the type of function.', default='Triangular', max_length=255, choices=[('Beta', 'Beta'), ('BetaPERT', 'BetaPERT'), ('Bernoulli', 'Bernoulli'), ('Binomial', 'Binomial'), ('Discrete Uniform', 'Discrete Uniform'), ('Exponential', 'Exponential'), ('Fixed Value', 'Fixed Value'), ('Gamma', 'Gamma'), ('Gaussian', 'Gaussian'), ('Histogram', 'Histogram'), ('Hypergeometric', 'Hypergeometric'), ('Inverse Gaussian', 'Inverse Gaussian'), ('Logistic', 'Logistic'), ('LogLogistic', 'LogLogistic'), ('Lognormal', 'Lognormal'), ('Negative Binomial', 'Negative Binomial'), ('Pareto', 'Pareto'), ('Pearson 5', 'Pearson 5'), ('Piecewise', 'Piecewise'), ('Poisson', 'Poisson'), ('Triangular', 'Triangular'), ('Uniform', 'Uniform'), ('Weibull', 'Weibull')])),
                ('mean', models.FloatField(blank=True, help_text='Functions: Inverse Gaussian, Gaussian, Lognormal, Poisson, Exponential.', validators=[django.core.validators.MinValueValidator(0.0)], null=True)),
                ('std_dev', models.FloatField(blank=True, help_text='Functions: Gaussian, Lognormal.', validators=[django.core.validators.MinValueValidator(0.0)], null=True)),
                ('min', models.FloatField(blank=True, help_text='Functions: Discrete Uniform, Uniform, Triangular, Beta, BetaPERT.', validators=[django.core.validators.MinValueValidator(0.0)], null=True)),
                ('mode', models.FloatField(blank=True, help_text='Functions: Fixed Value, Triangular, BetaPERT.', validators=[django.core.validators.MinValueValidator(0.0)], null=True)),
                ('max', models.FloatField(blank=True, help_text='Functions: Discrete Uniform, Uniform, Triangular, Beta, BetaPERT.', validators=[django.core.validators.MinValueValidator(0.0)], null=True)),
                ('alpha', models.FloatField(blank=True, help_text='Functions: Gamma, Weibull, Pearson 5, Beta.', null=True)),
                ('alpha2', models.FloatField(blank=True, help_text='Functions: Beta.', null=True)),
                ('beta', models.FloatField(blank=True, help_text='Functions: Gamma, Weibull, Pearson 5.', null=True)),
                ('location', models.FloatField(blank=True, help_text='Functions: Logistic, LogLogistic.', null=True)),
                ('scale', models.FloatField(blank=True, help_text='Functions: Logistic, LogLogistic.', null=True)),
                ('shape', models.FloatField(blank=True, help_text='Functions: LogLogistic, Inverse Gaussian.', null=True)),
                ('n', models.PositiveIntegerField(blank=True, help_text='Functions: Hypergeometric.', validators=[django.core.validators.MinValueValidator(0)], null=True)),
                ('p', models.FloatField(blank=True, help_text='Functions: Binomial, Negative Binomial, Bernoulli.', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], null=True)),
                ('m', models.PositiveIntegerField(blank=True, help_text='Functions: Hypergeometric.', validators=[django.core.validators.MinValueValidator(0)], null=True)),
                ('d', models.PositiveIntegerField(blank=True, help_text='Functions: Hypergeometric.', validators=[django.core.validators.MinValueValidator(0)], null=True)),
                ('theta', models.FloatField(blank=True, help_text='Functions: Pareto.', validators=[django.core.validators.MinValueValidator(0.0)], null=True)),
                ('a', models.FloatField(blank=True, help_text='Functions:Pareto.', validators=[django.core.validators.MinValueValidator(0.0)], null=True)),
                ('s', models.PositiveIntegerField(blank=True, help_text='Functions: Binomial, Negative Binomial.', validators=[django.core.validators.MinValueValidator(0)], null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProductionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(unique=True, max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProtocolAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.CharField(blank=True, help_text='Why should this protocol be assigned to this production type?', max_length=255, null=True)),
                ('_master_plan', models.ForeignKey(help_text='Points back to a master plan for grouping purposes.', to='ScenarioCreator.ControlMasterPlan')),
                ('control_protocol', models.ForeignKey(help_text='The control protocol to apply to this production type.', blank=True, null=True, to='ScenarioCreator.ControlProtocol')),
                ('production_type', models.ForeignKey(help_text='The production type that these outputs apply to.', unique=True, to='ScenarioCreator.ProductionType')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RelationalFunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='User-assigned name for each function.', max_length=255)),
                ('x_axis_units', models.CharField(help_text='Specifies the descriptive units for the x axis in relational functions.', default='Days', max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('y_axis_units', models.CharField(blank=True, help_text='Specifies the descriptive units for the x axis in relational functions.', max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RelationalPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('y', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('relational_function', models.ForeignKey(to='ScenarioCreator.RelationalFunction')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, help_text='The description of the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#scenario" class="wiki">scenario</a>.')),
                ('language', models.CharField(blank=True, help_text='Language that the model is in - English is default.', default='en', max_length=255, choices=[('en', 'English'), ('es', 'Spanish')])),
                ('random_seed', models.IntegerField(blank=True, help_text='The specified seed value for the random number generator.', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', django_extras.db.models.fields.LatitudeField(help_text='The latitude used to georeference this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#unit" class="wiki">Unit</a>.', validators=[django.core.validators.MinValueValidator(-90.0), django.core.validators.MaxValueValidator(90.0)])),
                ('longitude', django_extras.db.models.fields.LongitudeField(help_text='The longitude used to georeference this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#unit" class="wiki">Unit</a>.', validators=[django.core.validators.MinValueValidator(-180.0), django.core.validators.MaxValueValidator(180.0)])),
                ('initial_state', models.CharField(help_text='Code indicating the actual disease state of the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#unit" class="wiki">Unit</a> at the beginning of the simulation.', default='S', max_length=255, choices=[('S', 'Susceptible'), ('L', 'Latent'), ('B', 'Infectious Subclinical'), ('C', 'Infectious Clinical'), ('N', 'Naturally Immune'), ('V', 'Vaccine Immune'), ('D', 'Destroyed')])),
                ('days_in_initial_state', models.IntegerField(blank=True, help_text='The number of days that the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#unit" class="wiki">Unit</a> will remain in its initial state unless preempted by other events.', null=True)),
                ('days_left_in_initial_state', models.IntegerField(blank=True, help_text='Used for setting up scripted scenarios.', null=True)),
                ('initial_size', models.PositiveIntegerField(help_text='The number of animals in the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#unit" class="wiki">Unit</a>.', validators=[django.core.validators.MinValueValidator(1)])),
                ('user_notes', models.TextField(blank=True)),
                ('_population', models.ForeignKey(to='ScenarioCreator.Population')),
                ('production_type', models.ForeignKey(help_text='The production type that these outputs apply to.', to='ScenarioCreator.ProductionType')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(help_text='Description of the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#zone" class="wiki">Zone</a>')),
                ('radius', models.FloatField(help_text='Radius in kilometers of the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#zone" class="wiki">Zone</a>', validators=[django.core.validators.MinValueValidator(0.0)])),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ZoneEffect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, null=True, max_length=255)),
                ('zone_detection_multiplier', models.FloatField(help_text='Multiplier for the probability of observing <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#clinically-infectious" class="wiki">clinical signs</a> in units of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a> in this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#zone" class="wiki">Zone</a>.', default=1.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('cost_of_surveillance_per_animal_day', django_extras.db.models.fields.MoneyField(help_text='Cost of surveillance per animal per day in this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#zone" class="wiki">Zone</a>.', max_digits=20, default=0.0, decimal_places=4)),
                ('zone_direct_movement', models.ForeignKey(help_text='Function the describes direct movement rate.', blank=True, null=True, to='ScenarioCreator.RelationalFunction', related_name='+')),
                ('zone_indirect_movement', models.ForeignKey(help_text='Function the describes indirect movement rate.', blank=True, null=True, to='ScenarioCreator.RelationalFunction', related_name='+')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ZoneEffectAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effect', models.ForeignKey(help_text='Describes what effect this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#zone" class="wiki">Zone</a> has on this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a>.', blank=True, null=True, to='ScenarioCreator.ZoneEffect')),
                ('production_type', models.ForeignKey(help_text='The <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a> that these outputs apply to.', to='ScenarioCreator.ProductionType')),
                ('zone', models.ForeignKey(help_text='<a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#zone" class="wiki">Zone</a> for which this event occurred.', to='ScenarioCreator.Zone')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='probabilityfunction',
            name='graph',
            field=models.ForeignKey(help_text='A series of points used in: Histogram, Piecewise.', blank=True, null=True, to='ScenarioCreator.RelationalFunction'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='indirectspread',
            name='distance_distribution',
            field=models.ForeignKey(help_text='Defines the shipment distances for <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct</a> or <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a> models.', to='ScenarioCreator.ProbabilityFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='indirectspread',
            name='movement_control',
            field=models.ForeignKey(help_text='<a href="https://github.com/NAVADMC/ADSM/wiki/Relational-functions" class="wiki">Relational function</a> used to define movement control effects for the indicated <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production types</a> combinations.', to='ScenarioCreator.RelationalFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='indirectspread',
            name='transport_delay',
            field=models.ForeignKey(help_text='WARNING: THIS FIELD IS NOT RECOMMENDED BY ADSM and will be removed in later versions. Consider setting this to "-----".', blank=True, null=True, to='ScenarioCreator.ProbabilityFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='diseasespreadassignment',
            name='destination_production_type',
            field=models.ForeignKey(help_text='The <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a> that will be the recipient type for this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a> combination.', to='ScenarioCreator.ProductionType', related_name='used_as_destinations'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='diseasespreadassignment',
            name='direct_contact_spread',
            field=models.ForeignKey(help_text='Disease spread mechanism used to model spread by <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct contact</a> between these types.', blank=True, null=True, to='ScenarioCreator.DirectSpread', related_name='direct_spread_pair'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='diseasespreadassignment',
            name='indirect_contact_spread',
            field=models.ForeignKey(help_text='Disease spread mechanism used to model spread by <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a> between these types.', blank=True, null=True, to='ScenarioCreator.IndirectSpread', related_name='indirect_spread_pair'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='diseasespreadassignment',
            name='source_production_type',
            field=models.ForeignKey(help_text='The <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a> that will be the source type for this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a> combination.', to='ScenarioCreator.ProductionType', related_name='used_as_sources'),
            preserve_default=True,
        ),
        migrations.AlterUniqueTogether(
            name='diseasespreadassignment',
            unique_together=set([('source_production_type', 'destination_production_type')]),
        ),
        migrations.AddField(
            model_name='diseaseprogressionassignment',
            name='production_type',
            field=models.ForeignKey(help_text='The <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a> that these outputs apply to.', unique=True, to='ScenarioCreator.ProductionType'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='diseaseprogressionassignment',
            name='progression',
            field=models.ForeignKey(blank=True, null=True, to='ScenarioCreator.DiseaseProgression'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='diseaseprogression',
            name='disease_clinical_period',
            field=models.ForeignKey(help_text='Defines the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#clinically-infectious" class="wiki">clinical</a> period for units of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a>.', to='ScenarioCreator.ProbabilityFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='diseaseprogression',
            name='disease_immune_period',
            field=models.ForeignKey(help_text='Defines the natural <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#immune" class="wiki">immune</a> period for units of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a>.', to='ScenarioCreator.ProbabilityFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='diseaseprogression',
            name='disease_latent_period',
            field=models.ForeignKey(help_text='Defines the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#latent-state" class="wiki">latent period</a> for units of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a>.', to='ScenarioCreator.ProbabilityFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='diseaseprogression',
            name='disease_prevalence',
            field=models.ForeignKey(help_text='Defines the prevalance for units of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a>.', blank=True, null=True, to='ScenarioCreator.RelationalFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='diseaseprogression',
            name='disease_subclinical_period',
            field=models.ForeignKey(help_text='Defines the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#subclinically-infectious" class="wiki">Subclinical</a> period for units of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a>.', to='ScenarioCreator.ProbabilityFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='directspread',
            name='_disease',
            field=models.ForeignKey(help_text='Parent disease whose spreading characteristics this describes.', to='ScenarioCreator.Disease'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='directspread',
            name='distance_distribution',
            field=models.ForeignKey(help_text='Defines the shipment distances for <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#direct-contact" class="wiki">direct</a> or <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#indirect-contact" class="wiki">indirect contact</a> models.', to='ScenarioCreator.ProbabilityFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='directspread',
            name='movement_control',
            field=models.ForeignKey(help_text='<a href="https://github.com/NAVADMC/ADSM/wiki/Relational-functions" class="wiki">Relational function</a> used to define movement control effects for the indicated <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production types</a> combinations.', to='ScenarioCreator.RelationalFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='directspread',
            name='transport_delay',
            field=models.ForeignKey(help_text='WARNING: THIS FIELD IS NOT RECOMMENDED BY ADSM and will be removed in later versions. Consider setting this to "-----".', blank=True, null=True, to='ScenarioCreator.ProbabilityFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='controlprotocol',
            name='detection_probability_for_observed_time_in_clinical',
            field=models.ForeignKey(help_text='Relational function used to define the probability of observing <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#clinically-infectious" class="wiki">clinical signs</a> in units of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a>.', blank=True, null=True, to='ScenarioCreator.RelationalFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='controlprotocol',
            name='detection_probability_report_vs_first_detection',
            field=models.ForeignKey(help_text='Relational function used to define the probability of reporting <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#clinically-infectious" class="wiki">clinical signs</a> in units of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a>.', blank=True, null=True, to='ScenarioCreator.RelationalFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='controlprotocol',
            name='test_delay',
            field=models.ForeignKey(help_text='Function that describes the delay in obtaining test results.', blank=True, null=True, to='ScenarioCreator.ProbabilityFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='controlprotocol',
            name='trace_result_delay',
            field=models.ForeignKey(help_text='Delay for carrying out trace investigation result (days).', blank=True, null=True, to='ScenarioCreator.ProbabilityFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='controlprotocol',
            name='vaccine_immune_period',
            field=models.ForeignKey(help_text='Defines the <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#vaccine-immune" class="wiki">vaccine immune</a> period for units of this <a href="https://github.com/NAVADMC/ADSM/wiki/Lexicon-of-Disease-Spread-Modelling-terms#production-type" class="wiki">production type</a>.', blank=True, null=True, to='ScenarioCreator.ProbabilityFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='controlmasterplan',
            name='destruction_capacity',
            field=models.ForeignKey(help_text='The relational function used to define the daily destruction capacity.', blank=True, null=True, to='ScenarioCreator.RelationalFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='controlmasterplan',
            name='vaccination_capacity',
            field=models.ForeignKey(help_text='Relational function used to define the daily vaccination capacity.', blank=True, null=True, to='ScenarioCreator.RelationalFunction', related_name='+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='airbornespread',
            name='_disease',
            field=models.ForeignKey(help_text='Parent disease whose spreading characteristics this describes.', to='ScenarioCreator.Disease'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='airbornespread',
            name='transport_delay',
            field=models.ForeignKey(help_text='WARNING: THIS FIELD IS NOT RECOMMENDED BY ADSM and will be removed in later versions. Consider setting this to "-----".', blank=True, null=True, to='ScenarioCreator.ProbabilityFunction', related_name='+'),
            preserve_default=True,
        ),
    ]
