from django.db import models
import Results.output_parser
from ScenarioCreator.models import ProductionType, Zone
import re

"""Results models explanation: The Results models are containers to capture all of the output generated by the CEngine
simulation and present it to the user broken down into 13 different tables.

Note: We are not storing cumulative values at the moment, since it can be computed.

Model Declarations: Each model creates a table in sqlite3 and a 'model' for table presentation on the GUI.  So
 each model serves double duty.  Notice that there are effectively 3 names for each field inside a model.
 1) the Python name (e.g. tsdASusc = models.) is used when constructing the object and is designed to match the CEngine output.
 2) the db_column name will show up when a user exports the DataBase.  They are at least readable explanations.
 3) verbose_name is used in the GUI for displaying Table headers.  Without this, Django would use the Python name,
 which is significantly more obscure.
 The code in scripts/Output_Table.py (.ipynb) was used to generate these name declarations.  Also, if you're reading this
 doc and you don't know about IPython Notebooks, go get IPython Notebooks."""


def printable_name(underscores_name):
    underscores_name = re.sub(r'([a-z])([A-Z])', r'\1_\2', underscores_name).lower()  # convert from camel case
    spaced = re.sub(r'_', r' ', underscores_name)
    return spaced.title()  # capitalize
    #TODO: Add the explain[] dictionary to the printable names, split on spaces, and look for matching strings


class OutputBaseModel(models.Model):
    def __iter__(self):
        for field in self._meta.fields:
            # try:
            #     value = getattr(self, field)
            # except:
            #     value = None
            yield (field.name, field)
    # This lets; you; do:
    # for field, val in myModel:
    #     print( field, val)
    class Meta:
        abstract = True



class DailyReport(OutputBaseModel):
    sparse_dict = models.TextField()
    full_line = models.TextField()
    # to get the dictionary object back:
    # import ast
    # ast.literal_eval("{'muffin' : 'lolz', 'foo' : 'kitty'}")

    def __str__(self):
        return self.sparse_dict


class DailyByProductionType(OutputBaseModel):
    iteration = models.IntegerField(blank=True, null=True, verbose_name=printable_name('iteration'),
        help_text='The iteration during which the outputs in this records where generated.', )
    day = models.IntegerField(blank=True, null=True, verbose_name=printable_name('day'),
        help_text='The day in this iteration during which the outputs in this records where generated.', )
    production_type = models.ForeignKey(ProductionType, blank=True, null=True, verbose_name=printable_name('production_type'),
        help_text='The identifier of the production type that these outputs apply to.', )

    desnUAll = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units For Any Reason")
    desnUUnsp = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units Unspecified")
    desnURing = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units because of Ring")
    desnUDet = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units because of Detection")
    desnUIni = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units Initially")
    desnUDirFwd = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units because of Direct Forward trace")
    desnUIndFwd = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units because of Indirect Forward trace")
    desnUDirBack = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units because of Direct Back trace")
    desnUIndBack = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units because of Indirect Back trace")
    desnAAll = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals For Any Reason")
    desnAUnsp = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals Unspecified")
    desnARing = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals because of Ring")
    desnADet = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals because of Detection")
    desnAIni = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals Initially")
    desnADirFwd = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals because of Direct Forward trace")
    desnAIndFwd = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals because of Indirect Forward trace")
    desnADirBack = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals because of Direct Back trace")
    desnAIndBack = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals because of Indirect Back trace")
    descUAll = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units For Any Reason")
    descUUnsp = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units Unspecified")
    descURing = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units because of Ring")
    descUDet = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units because of Detection")
    descUIni = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units Initially")
    descUDirFwd = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units because of Direct Forward trace")
    descUIndFwd = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units because of Indirect Forward trace")
    descUDirBack = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units because of Direct Back trace")
    descUIndBack = models.IntegerField(blank=True, null=True, verbose_name="Destruction Units because of Indirect Back trace")
    descAAll = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals For Any Reason")
    descAUnsp = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals Unspecified")
    descARing = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals because of Ring")
    descADet = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals because of Detection")
    descAIni = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals Initially")
    descADirFwd = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals because of Direct Forward trace")
    descAIndFwd = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals because of Indirect Forward trace")
    descADirBack = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals because of Direct Back trace")
    descAIndBack = models.IntegerField(blank=True, null=True, verbose_name="Destruction Animals because of Indirect Back trace")
    deswU = models.IntegerField(blank=True, null=True, verbose_name="Destruction Wait Time Units")
    deswA = models.IntegerField(blank=True, null=True, verbose_name="Destruction Wait Time Animals")
    detcUAll = models.IntegerField(blank=True, null=True, verbose_name="Detection Units For Any Reason")
    detcUClin = models.IntegerField(blank=True, null=True, verbose_name="Detection Units Clinical")
    detcUTest = models.IntegerField(blank=True, null=True, verbose_name="Detection Units from Lab Tests")
    detcAAll = models.IntegerField(blank=True, null=True, verbose_name="Detection Animals For Any Reason")
    detcAClin = models.IntegerField(blank=True, null=True, verbose_name="Detection Animals Clinical")
    detcATest = models.IntegerField(blank=True, null=True, verbose_name="Detection Animals from Lab Tests")
    detnUAll = models.IntegerField(blank=True, null=True, verbose_name="Detection Units For Any Reason")
    detnUClin = models.IntegerField(blank=True, null=True, verbose_name="Detection Units Clinical")
    detnUTest = models.IntegerField(blank=True, null=True, verbose_name="Detection Units from Lab Tests")
    detnAAll = models.IntegerField(blank=True, null=True, verbose_name="Detection Animals For Any Reason")
    detnAClin = models.IntegerField(blank=True, null=True, verbose_name="Detection Animals Clinical")
    detnATest = models.IntegerField(blank=True, null=True, verbose_name="Detection Animals from Lab Tests")
    exmnUAll = models.IntegerField(blank=True, null=True, verbose_name="Examination Units For Any Reason")
    exmnURing = models.IntegerField(blank=True, null=True, verbose_name="Examination Units because of Ring")
    exmnUDirFwd = models.IntegerField(blank=True, null=True, verbose_name="Examination Units because of Direct Forward trace")
    exmnUIndFwd = models.IntegerField(blank=True, null=True, verbose_name="Examination Units because of Indirect Forward trace")
    exmnUDirBack = models.IntegerField(blank=True, null=True, verbose_name="Examination Units because of Direct Back trace")
    exmnUIndBack = models.IntegerField(blank=True, null=True, verbose_name="Examination Units because of Indirect Back trace")
    exmnUDet = models.IntegerField(blank=True, null=True, verbose_name="Examination Units because of Detection")
    exmnAAll = models.IntegerField(blank=True, null=True, verbose_name="Examination Animals For Any Reason")
    exmnARing = models.IntegerField(blank=True, null=True, verbose_name="Examination Animals because of Ring")
    exmnADirFwd = models.IntegerField(blank=True, null=True, verbose_name="Examination Animals because of Direct Forward trace")
    exmnAIndFwd = models.IntegerField(blank=True, null=True, verbose_name="Examination Animals because of Indirect Forward trace")
    exmnADirBack = models.IntegerField(blank=True, null=True, verbose_name="Examination Animals because of Direct Back trace")
    exmnAIndBack = models.IntegerField(blank=True, null=True, verbose_name="Examination Animals because of Indirect Back trace")
    exmnADet = models.IntegerField(blank=True, null=True, verbose_name="Examination Animals because of Detection")
    exmcUAll = models.IntegerField(blank=True, null=True, verbose_name="Examination Units For Any Reason")
    exmcURing = models.IntegerField(blank=True, null=True, verbose_name="Examination Units because of Ring")
    exmcUDirFwd = models.IntegerField(blank=True, null=True, verbose_name="Examination Units because of Direct Forward trace")
    exmcUIndFwd = models.IntegerField(blank=True, null=True, verbose_name="Examination Units because of Indirect Forward trace")
    exmcUDirBack = models.IntegerField(blank=True, null=True, verbose_name="Examination Units because of Direct Back trace")
    exmcUIndBack = models.IntegerField(blank=True, null=True, verbose_name="Examination Units because of Indirect Back trace")
    exmcUDet = models.IntegerField(blank=True, null=True, verbose_name="Examination Units because of Detection")
    exmcAAll = models.IntegerField(blank=True, null=True, verbose_name="Examination Animals For Any Reason")
    exmcARing = models.IntegerField(blank=True, null=True, verbose_name="Examination Animals because of Ring")
    exmcADirFwd = models.IntegerField(blank=True, null=True, verbose_name="Examination Animals because of Direct Forward trace")
    exmcAIndFwd = models.IntegerField(blank=True, null=True, verbose_name="Examination Animals because of Indirect Forward trace")
    exmcADirBack = models.IntegerField(blank=True, null=True, verbose_name="Examination Animals because of Direct Back trace")
    exmcAIndBack = models.IntegerField(blank=True, null=True, verbose_name="Examination Animals because of Indirect Back trace")
    exmcADet = models.IntegerField(blank=True, null=True, verbose_name="Examination Animals because of Detection")
    expcU = models.IntegerField(blank=True, null=True, verbose_name="Exposure Units ")
    expcUDir = models.IntegerField(blank=True, null=True, verbose_name="Exposure Units Direct Spread")
    expcUInd = models.IntegerField(blank=True, null=True, verbose_name="Exposure Units Indirect Spread")
    expcUAir = models.IntegerField(blank=True, null=True, verbose_name="Exposure Units Airborne Spread")
    expcA = models.IntegerField(blank=True, null=True, verbose_name="Exposure Animals ")
    expcADir = models.IntegerField(blank=True, null=True, verbose_name="Exposure Animals Direct Spread")
    expcAInd = models.IntegerField(blank=True, null=True, verbose_name="Exposure Animals Indirect Spread")
    expcAAir = models.IntegerField(blank=True, null=True, verbose_name="Exposure Animals Airborne Spread")
    expnU = models.IntegerField(blank=True, null=True, verbose_name="Exposure Units ")
    expnUDir = models.IntegerField(blank=True, null=True, verbose_name="Exposure Units Direct Spread")
    expnUInd = models.IntegerField(blank=True, null=True, verbose_name="Exposure Units Indirect Spread")
    expnUAir = models.IntegerField(blank=True, null=True, verbose_name="Exposure Units Airborne Spread")
    expnA = models.IntegerField(blank=True, null=True, verbose_name="Exposure Animals ")
    expnADir = models.IntegerField(blank=True, null=True, verbose_name="Exposure Animals Direct Spread")
    expnAInd = models.IntegerField(blank=True, null=True, verbose_name="Exposure Animals Indirect Spread")
    expnAAir = models.IntegerField(blank=True, null=True, verbose_name="Exposure Animals Airborne Spread")
    firstDestruction = models.IntegerField(blank=True, null=True, verbose_name="First Destruction ")
    firstDestructionUnsp = models.IntegerField(blank=True, null=True, verbose_name="First Destruction Unspecified")
    firstDestructionRing = models.IntegerField(blank=True, null=True, verbose_name="First Destruction because of Ring")
    firstDestructionDet = models.IntegerField(blank=True, null=True, verbose_name="First Destruction because of Detection")
    firstDestructionIni = models.IntegerField(blank=True, null=True, verbose_name="First Destruction Initially")
    firstDestructionDirFwd = models.IntegerField(blank=True, null=True, verbose_name="First Destruction because of Direct Forward trace")
    firstDestructionIndFwd = models.IntegerField(blank=True, null=True, verbose_name="First Destruction because of Indirect Forward trace")
    firstDestructionDirBack = models.IntegerField(blank=True, null=True, verbose_name="First Destruction because of Direct Back trace")
    firstDestructionIndBack = models.IntegerField(blank=True, null=True, verbose_name="First Destruction because of Indirect Back trace")
    firstDetection = models.IntegerField(blank=True, null=True, verbose_name="First Detection ")
    firstDetectionClin = models.IntegerField(blank=True, null=True, verbose_name="First Detection Clinical")
    firstDetectionTest = models.IntegerField(blank=True, null=True, verbose_name="First Detection from Lab Tests")
    firstVaccination = models.IntegerField(blank=True, null=True, verbose_name="First Vaccination ")
    firstVaccinationRing = models.IntegerField(blank=True, null=True, verbose_name="First Vaccination because of Ring")
    infcU = models.IntegerField(blank=True, null=True, verbose_name="Infection Units ")
    infcUIni = models.IntegerField(blank=True, null=True, verbose_name="Infection Units Initially")
    infcUDir = models.IntegerField(blank=True, null=True, verbose_name="Infection Units Direct Spread")
    infcUInd = models.IntegerField(blank=True, null=True, verbose_name="Infection Units Indirect Spread")
    infcUAir = models.IntegerField(blank=True, null=True, verbose_name="Infection Units Airborne Spread")
    infcA = models.IntegerField(blank=True, null=True, verbose_name="Infection Animals ")
    infcAIni = models.IntegerField(blank=True, null=True, verbose_name="Infection Animals Initially")
    infcADir = models.IntegerField(blank=True, null=True, verbose_name="Infection Animals Direct Spread")
    infcAInd = models.IntegerField(blank=True, null=True, verbose_name="Infection Animals Indirect Spread")
    infcAAir = models.IntegerField(blank=True, null=True, verbose_name="Infection Animals Airborne Spread")
    infnU = models.IntegerField(blank=True, null=True, verbose_name="Infection Units ")
    infnUIni = models.IntegerField(blank=True, null=True, verbose_name="Infection Units Initially")
    infnUDir = models.IntegerField(blank=True, null=True, verbose_name="Infection Units Direct Spread")
    infnUInd = models.IntegerField(blank=True, null=True, verbose_name="Infection Units Indirect Spread")
    infnUAir = models.IntegerField(blank=True, null=True, verbose_name="Infection Units Airborne Spread")
    infnA = models.IntegerField(blank=True, null=True, verbose_name="Infection Animals ")
    infnAIni = models.IntegerField(blank=True, null=True, verbose_name="Infection Animals Initially")
    infnADir = models.IntegerField(blank=True, null=True, verbose_name="Infection Animals Direct Spread")
    infnAInd = models.IntegerField(blank=True, null=True, verbose_name="Infection Animals Indirect Spread")
    infnAAir = models.IntegerField(blank=True, null=True, verbose_name="Infection Animals Airborne Spread")
    lastDetection = models.IntegerField(blank=True, null=True, verbose_name="Last Detection ")
    lastDetectionClin = models.IntegerField(blank=True, null=True, verbose_name="Last Detection Clinical")
    lastDetectionTest = models.IntegerField(blank=True, null=True, verbose_name="Last Detection from Lab Tests")
    trnUAll = models.IntegerField(blank=True, null=True, verbose_name="Trace Units For Any Reason ")
    trnUAllp = models.IntegerField(blank=True, null=True, verbose_name="Trace Units For Any Reason Possible")
    trnUDir = models.IntegerField(blank=True, null=True, verbose_name="Trace Units Direct Spread ")
    trnUDirp = models.IntegerField(blank=True, null=True, verbose_name="Trace Units Direct Spread Possible")
    trnUInd = models.IntegerField(blank=True, null=True, verbose_name="Trace Units Indirect Spread ")
    trnUIndp = models.IntegerField(blank=True, null=True, verbose_name="Trace Units Indirect Spread Possible")
    trnAAll = models.IntegerField(blank=True, null=True, verbose_name="Trace Animals For Any Reason ")
    trnAAllp = models.IntegerField(blank=True, null=True, verbose_name="Trace Animals For Any Reason Possible")
    trnADir = models.IntegerField(blank=True, null=True, verbose_name="Trace Animals Direct Spread ")
    trnADirp = models.IntegerField(blank=True, null=True, verbose_name="Trace Animals Direct Spread Possible")
    trnAInd = models.IntegerField(blank=True, null=True, verbose_name="Trace Animals Indirect Spread ")
    trnAIndp = models.IntegerField(blank=True, null=True, verbose_name="Trace Animals Indirect Spread Possible")
    trcUAll = models.IntegerField(blank=True, null=True, verbose_name="Trace Units For Any Reason ")
    trcUAllp = models.IntegerField(blank=True, null=True, verbose_name="Trace Units For Any Reason Possible")
    trcUDir = models.IntegerField(blank=True, null=True, verbose_name="Trace Units Direct Spread ")
    trcUDirp = models.IntegerField(blank=True, null=True, verbose_name="Trace Units Direct Spread Possible")
    trcUInd = models.IntegerField(blank=True, null=True, verbose_name="Trace Units Indirect Spread ")
    trcUIndp = models.IntegerField(blank=True, null=True, verbose_name="Trace Units Indirect Spread Possible")
    trcAAll = models.IntegerField(blank=True, null=True, verbose_name="Trace Animals For Any Reason ")
    trcAAllp = models.IntegerField(blank=True, null=True, verbose_name="Trace Animals For Any Reason Possible")
    trcADir = models.IntegerField(blank=True, null=True, verbose_name="Trace Animals Direct Spread ")
    trcADirp = models.IntegerField(blank=True, null=True, verbose_name="Trace Animals Direct Spread Possible")
    trcAInd = models.IntegerField(blank=True, null=True, verbose_name="Trace Animals Indirect Spread ")
    trcAIndp = models.IntegerField(blank=True, null=True, verbose_name="Trace Animals Indirect Spread Possible")
    tsdUSusc = models.IntegerField(blank=True, null=True, verbose_name="Transition State Daily Units Susceptible")
    tsdULat = models.IntegerField(blank=True, null=True, verbose_name="Transition State Daily Units Latent")
    tsdUSubc = models.IntegerField(blank=True, null=True, verbose_name="Transition State Daily Units Subclinical")
    tsdUClin = models.IntegerField(blank=True, null=True, verbose_name="Transition State Daily Units Clinical")
    tsdUNImm = models.IntegerField(blank=True, null=True, verbose_name="Transition State Daily Units Natural Immune")
    tsdUVImm = models.IntegerField(blank=True, null=True, verbose_name="Transition State Daily Units Vaccine Immune")
    tsdUDest = models.IntegerField(blank=True, null=True, verbose_name="Transition State Daily Units Destroyed")
    tsdASusc = models.IntegerField(blank=True, null=True, verbose_name="Transition State Daily Animals Susceptible")
    tsdALat = models.IntegerField(blank=True, null=True, verbose_name="Transition State Daily Animals Latent")
    tsdASubc = models.IntegerField(blank=True, null=True, verbose_name="Transition State Daily Animals Subclinical")
    tsdAClin = models.IntegerField(blank=True, null=True, verbose_name="Transition State Daily Animals Clinical")
    tsdANImm = models.IntegerField(blank=True, null=True, verbose_name="Transition State Daily Animals Natural Immune")
    tsdAVImm = models.IntegerField(blank=True, null=True, verbose_name="Transition State Daily Animals Vaccine Immune")
    tsdADest = models.IntegerField(blank=True, null=True, verbose_name="Transition State Daily Animals Destroyed")
    tstcAAll = models.IntegerField(blank=True, null=True, verbose_name="Lab Test Cumulative Animals For Any Reason")
    tstcADirFwd = models.IntegerField(blank=True, null=True, verbose_name="Lab Test Cumulative Animals because of Direct Forward trace")
    tstcAIndFwd = models.IntegerField(blank=True, null=True, verbose_name="Lab Test Cumulative Animals because of Indirect Forward trace")
    tstcADirBack = models.IntegerField(blank=True, null=True, verbose_name="Lab Test Cumulative Animals because of Direct Back trace")
    tstcAIndBack = models.IntegerField(blank=True, null=True, verbose_name="Lab Test Cumulative Animals because of Indirect Back trace")
    tstcUAll = models.IntegerField(blank=True, null=True, verbose_name="Lab Test Cumulative Units For Any Reason")
    tstcUDirFwd = models.IntegerField(blank=True, null=True, verbose_name="Lab Test Cumulative Units because of Direct Forward trace")
    tstcUIndFwd = models.IntegerField(blank=True, null=True, verbose_name="Lab Test Cumulative Units because of Indirect Forward trace")
    tstcUDirBack = models.IntegerField(blank=True, null=True, verbose_name="Lab Test Cumulative Units because of Direct Back trace")
    tstcUIndBack = models.IntegerField(blank=True, null=True, verbose_name="Lab Test Cumulative Units because of Indirect Back trace")
    tstcUTruePos = models.IntegerField(blank=True, null=True, verbose_name="Lab Test Cumulative Units True Positives")
    tstcUFalsePos = models.IntegerField(blank=True, null=True, verbose_name="Lab Test Cumulative Units False Positives")
    tstcUTrueNeg = models.IntegerField(blank=True, null=True, verbose_name="Lab Test Cumulative Units True Negatives")
    tstcUFalseNeg = models.IntegerField(blank=True, null=True, verbose_name="Lab Test Cumulative Units False Negatives")
    tstnUTruePos = models.IntegerField(blank=True, null=True, verbose_name="Lab Test New Units True Positives")
    tstnUFalsePos = models.IntegerField(blank=True, null=True, verbose_name="Lab Test New Units False Positives")
    tstnUTrueNeg = models.IntegerField(blank=True, null=True, verbose_name="Lab Test New Units True Negatives")
    tstnUFalseNeg = models.IntegerField(blank=True, null=True, verbose_name="Lab Test New Units False Negatives")
    vaccUAll = models.IntegerField(blank=True, null=True, verbose_name="Vaccination Cumulative Units For Any Reason")
    vaccUIni = models.IntegerField(blank=True, null=True, verbose_name="Vaccination Cumulative Units Initially")
    vaccURing = models.IntegerField(blank=True, null=True, verbose_name="Vaccination Cumulative Units because of Ring")
    vaccAAll = models.IntegerField(blank=True, null=True, verbose_name="Vaccination Cumulative Animals For Any Reason")
    vaccAIni = models.IntegerField(blank=True, null=True, verbose_name="Vaccination Cumulative Animals Initially")
    vaccARing = models.IntegerField(blank=True, null=True, verbose_name="Vaccination Cumulative Animals because of Ring")
    vacnUAll = models.IntegerField(blank=True, null=True, verbose_name="Vaccination New Units For Any Reason")
    vacnUIni = models.IntegerField(blank=True, null=True, verbose_name="Vaccination New Units Initially")
    vacnURing = models.IntegerField(blank=True, null=True, verbose_name="Vaccination New Units because of Ring")
    vacnAAll = models.IntegerField(blank=True, null=True, verbose_name="Vaccination New Animals For Any Reason")
    vacnAIni = models.IntegerField(blank=True, null=True, verbose_name="Vaccination New Animals Initially")
    vacnARing = models.IntegerField(blank=True, null=True, verbose_name="Vaccination New Animals because of Ring")
    vacwUAll = models.IntegerField(blank=True, null=True, verbose_name="Vaccination Wait Time Units For Any Reason")
    vacwUMax = models.IntegerField(blank=True, null=True, verbose_name="Vaccination Wait Time Units Max")
    vacwUMaxDay = models.IntegerField(blank=True, null=True, verbose_name="Vaccination Wait Time Units Day with Max")
    vacwUTimeMax = models.IntegerField(blank=True, null=True, verbose_name="Vaccination Wait Time Units Max Time")
    vacwUTimeAvg = models.FloatField(blank=True, null=True, verbose_name="Vaccination Wait Time Units Average Time")
    vacwUDaysInQueue = models.IntegerField(blank=True, null=True, verbose_name="Vaccination Wait Time Units Days in Queue")
    vacwAAll = models.FloatField(blank=True, null=True, verbose_name="Vaccination Wait Time Animals For Any Reason")
    vacwAMax = models.FloatField(blank=True, null=True, verbose_name="Vaccination Wait Time Animals Max")
    vacwAMaxDay = models.IntegerField(blank=True, null=True, verbose_name="Vaccination Wait Time Animals Day with Max")
    vacwATimeMax = models.FloatField(blank=True, null=True, verbose_name="Vaccination Wait Time Animals Max Time")
    vacwATimeAvg = models.FloatField(blank=True, null=True, verbose_name="Vaccination Wait Time Animals Average Time")
    vacwADaysInQueue = models.FloatField(blank=True, null=True, verbose_name="Vaccination Wait Time Animals Days in Queue")


#####END DailyByProductionType######

#####BEGIN DailyByZoneAndProductionType######


class DailyByZoneAndProductionType(OutputBaseModel):
    iteration = models.IntegerField(blank=True, null=True, verbose_name=printable_name('iteration'),
        help_text='The iteration during which the outputs in this records where generated.', )
    day = models.IntegerField(blank=True, null=True, verbose_name=printable_name('day'),
        help_text='The day in this iteration during which the outputs in this records where generated.', )
    production_type = models.ForeignKey(ProductionType, blank=True, null=True, verbose_name=printable_name('production_type'),
        help_text='The identifier of the production type that these outputs apply to.', )
    zone = models.ForeignKey(Zone, blank=True, null=True, verbose_name=printable_name('zone'),
        help_text='The identifier of the zone that these outputs apply to.', )

    unitsInZone      = models.IntegerField(blank=True, null=True, verbose_name=printable_name('unitsInZone'))
    unitDaysInZone   = models.IntegerField(blank=True, null=True, verbose_name=printable_name('unitDaysInZone'))
    animalDaysInZone = models.IntegerField(blank=True, null=True, verbose_name=printable_name('animalDaysInZone'))

    def __str__(self):
        return "%i, %i: %s and %s" % (self.iteration, self.day, self.production_type or "All Types", self.zone or "Background")


class DailyByZone(OutputBaseModel):
    iteration = models.IntegerField(blank=True, null=True, verbose_name=printable_name('iteration'),
        help_text='The iteration during which the outputs in this records where generated.', )
    day = models.IntegerField(blank=True, null=True, verbose_name=printable_name('day'),
        help_text='The day in this iteration during which the outputs in this records where generated.', )
    zone = models.ForeignKey(Zone, blank=True, null=True, verbose_name=printable_name('zone'),
        help_text='The identifier of the zone that these outputs apply to.', )

    zoneArea            = models.FloatField(blank=True, null=True, verbose_name=printable_name('zoneArea'))
    maxZoneArea         = models.FloatField(blank=True, null=True, verbose_name=printable_name('maxZoneArea'))
    maxZoneAreaDay      = models.IntegerField(blank=True, null=True, verbose_name=printable_name('maxZoneAreaDay'))
    zonePerimeter       = models.FloatField(blank=True, null=True, verbose_name=printable_name('zonePerimeter'))
    maxZonePerimeter    = models.FloatField(blank=True, null=True, verbose_name=printable_name('maxZonePerimeter'))
    maxZonePerimeterDay = models.IntegerField(blank=True, null=True, verbose_name=printable_name('maxZonePerimeterDay'))
    finalZoneArea       = models.FloatField(blank=True, null=True, verbose_name=printable_name('finalZoneArea'))
    finalZonePerimeter  = models.FloatField(blank=True, null=True, verbose_name=printable_name('finalZonePerimeter'))
    numSeparateAreas  = models.IntegerField(blank=True, null=True, verbose_name=printable_name('number of separate areas'))


class DailyControls(OutputBaseModel):
    iteration = models.IntegerField(blank=True, null=True, verbose_name=printable_name('iteration'),
        help_text='The iteration during which the outputs in this records where generated.', )
    day = models.IntegerField(blank=True, null=True, verbose_name=printable_name('day'),
        help_text='The day in this iteration during which the outputs in this records where generated.', )

    diseaseDuration      = models.IntegerField(blank=True, null=True, verbose_name=printable_name('diseaseDuration'))
    adqnUAll             = models.IntegerField(blank=True, null=True, verbose_name=printable_name('New Units Adequately Exposed'))
    adqcUAll             = models.IntegerField(blank=True, null=True, verbose_name=printable_name('Cumulative Units Adequately Exposed'))
    detOccurred          = models.IntegerField(blank=True, null=True, verbose_name=printable_name('detOccurred'))
    costSurveillance     = models.FloatField(blank=True, null=True, verbose_name=printable_name('costSurveillance'))
    vaccOccurred         = models.IntegerField(blank=True, null=True, verbose_name=printable_name('vaccOccurred'))
    vaccSetup            = models.FloatField(blank=True, null=True, verbose_name=printable_name('vaccSetup'))
    vaccVaccination      = models.FloatField(blank=True, null=True, verbose_name=printable_name('vaccVaccination'))
    vaccSubtotal         = models.FloatField(blank=True, null=True, verbose_name=printable_name('vaccSubtotal'))
    destrOccurred        = models.IntegerField(blank=True, null=True, verbose_name=printable_name('destrOccurred'))

    deswUMax = models.IntegerField(blank=True, null=True, verbose_name="Destruction Wait Time Units Max")
    deswUMaxDay = models.IntegerField(blank=True, null=True, verbose_name="Destruction Wait Time Units Day with Max")
    deswUTimeMax = models.IntegerField(blank=True, null=True, verbose_name="Destruction Wait Time Units Max Time")
    deswUTimeAvg = models.FloatField(blank=True, null=True, verbose_name="Destruction Wait Time Units Average Time")
    deswUDaysInQueue = models.IntegerField(blank=True, null=True, verbose_name="Destruction Wait Time Units Days in Queue")
    deswAMax = models.IntegerField(blank=True, null=True, verbose_name="Destruction Wait Time Animals Max")
    deswAMaxDay = models.IntegerField(blank=True, null=True, verbose_name="Destruction Wait Time Animals Day with Max")
    deswATimeMax = models.IntegerField(blank=True, null=True, verbose_name="Destruction Wait Time Animals Max Time")
    deswATimeAvg = models.FloatField(blank=True, null=True, verbose_name="Destruction Wait Time Animals Average Time")
    deswADaysInQueue = models.IntegerField(blank=True, null=True, verbose_name="Destruction Wait Time Animals Days in Queue")

    destrAppraisal       = models.FloatField(blank=True, null=True, verbose_name=printable_name('destrAppraisal'))
    destrEuthanasia      = models.FloatField(blank=True, null=True, verbose_name=printable_name('destrEuthanasia'))
    destrIndemnification = models.FloatField(blank=True, null=True, verbose_name=printable_name('destrIndemnification'))
    destrDisposal        = models.FloatField(blank=True, null=True, verbose_name=printable_name('destrDisposal'))
    destrCleaning        = models.FloatField(blank=True, null=True, verbose_name=printable_name('destrCleaning'))
    destrSubtotal        = models.FloatField(blank=True, null=True, verbose_name=printable_name('destrSubtotal'))
    outbreakDuration     = models.IntegerField(blank=True, null=True, verbose_name=printable_name('outbreakDuration'))
    costsTotal           = models.FloatField(blank=True, null=True, verbose_name=printable_name('costsTotal'))
    firstDetUInfAll      = models.IntegerField(blank=True, null=True, verbose_name=printable_name('Units Infected at First Detection'))
    firstDetAInfAll      = models.IntegerField(blank=True, null=True, verbose_name=printable_name('Animals Infected at First Detection'))
    ratio                = models.IntegerField(blank=True, null=True, verbose_name=printable_name('ratio'))
    averagePrevalence   = models.IntegerField(blank=True, null=True, verbose_name=printable_name('averagePrevalence'))
    detcUqAll            = models.IntegerField(blank=True, null=True, verbose_name=printable_name('detcUqAll'))


