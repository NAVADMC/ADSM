<?xml version="1.0" encoding="UTF-8"?>
<naadsm:disease-simulation
  xmlns:naadsm="http://www.naadsm.org/schema"
  xmlns:xdf="http://xml.gsfc.nasa.gov/XDF">
  <description>Advance or stop, p advance = 0.8</description>
  <num-days>32767</num-days>
  <num-runs>1000</num-runs>

  <!--
    This scenario tests the probability of infection given exposure.  There is
    a long line of herds, and every 2 days the infection either advances along
    that line, or stops.

    The infectious period lasts only 1 day, so the infected herd gets 1 chance
    to pass the infection along.  Fast detection and quarantine is set up so
    that the shipments cannot "backtrack" along the line.

    The expected number of infections by direct contact is 0.8/(1-0.8)=4.

    Why: If there are n herds (not counting the initially infected one), and
    each day the infection either advances with probability p or stops for good
    with probability q=1-p, then we can list all the possible values for the
    number of herds infected "x" and their probabilities like this:

    x=0 means it stopped on the first day.
    prob = q

    x=1 means it advanced on the 1st day, then stopped on the 2nd.
    prob = p * q

    x=2 means it advanced on the 1st & 2nd days, then stopped on the 3rd.
    prob = p * p * q
    ...
    x=n-1 means it advanced on the first n-1 days, then stopped on the nth.
    prob = p^(n-1) * q

    x=n means it advanced on all n days.
    prob = p^n

    The expected value for x is the sum of each possible value of x times the
    probability of that value occurring:
    E(x) = sum [i from 0 to n-1] (i * p^i * q) + (n * p^n)

    If n, the number of herds in the line, is "large", we can simplify.  First,
    drop the first term in the sum becase 0*(p^0)*q = 0, and drop the final
    term because (n * p^n)->0 as n->infinity.
    E(x) = sum [i from 1 to n-1] (i * p^i * q)
         = p*q + 2*(p^2)*q + 3*(p^3)*q + 4*(p^4)*q + 5*(p^5)*q + ...

    Every term contains a p*q, factor it out:
    E(x) = p*q * (1 + 2*p + 3*(p^2) + 4*(p^3) + 5*(p^4) + ...)

    Here we can make use of the identity
    (1-x)^-2 = 1 + 2x + 3x^2 + 4x^3 + 5x^4 + ...
    (This is a "negative binomial series", Newton proved that formula in 1676.)

    E(x) = p * q * ((1-p)^-2)
         = p * q * (q^-2)
         = p / q
  -->

  <models>

    <disease-model production-type="A">
      <latent-period>
        <point>1</point>
        <units><xdf:unit>day</xdf:unit></units>
      </latent-period>
      <infectious-subclinical-period>
        <point>0</point>
        <units><xdf:unit>day</xdf:unit></units>
      </infectious-subclinical-period>
      <infectious-clinical-period>
        <point>1</point>
        <units><xdf:unit>day</xdf:unit></units>
      </infectious-clinical-period>
      <immunity-period>
        <point>5</point>
        <units><xdf:unit>day</xdf:unit></units>
      </immunity-period>
    </disease-model>

    <!-- The parameters below will give 1 animal shipment per day, to a herd 1
      km away. -->
    <contact-spread-model from-production-type="A" to-production-type="A" contact-type="direct">
      <fixed-movement-rate>
        <value>1</value>
        <units><xdf:unit power="-1">day</xdf:unit></units>
      </fixed-movement-rate>
      <distance>
        <point>1</point>
        <units><xdf:unit>km</xdf:unit></units>
      </distance>
      <!-- Shipping is instantaneous. -->
      <delay>
        <point>0</point>
        <units><xdf:unit>day</xdf:unit></units>
      </delay>
      <prob-infect>0.8</prob-infect>
      <movement-control>
        <value>0</value> <value>1.0</value>
        <units><xdf:unit>day</xdf:unit></units>
        <units><xdf:unitless /></units>
      </movement-control>
      <latent-units-can-infect>false</latent-units-can-infect>
      <subclinical-units-can-infect>true</subclinical-units-can-infect>
    </contact-spread-model>

    <infection-monitor>
      <output>
        <variable-name>cumulative-num-units-infected</variable-name>
	<frequency>once</frequency>
      </output>
    </infection-monitor>

    <!-- Use detection to prevent backtracking. -->
    <detection-model production-type="A">
      <prob-report-vs-time-clinical>
        <value>0</value> <value>1.0</value>
        <units><xdf:unit>day</xdf:unit></units>
        <units><xdf:unitless /></units>
      </prob-report-vs-time-clinical>
      <prob-report-vs-time-since-outbreak>
        <value>0</value> <value>1.0</value>
        <units><xdf:unit>day</xdf:unit></units>
        <units><xdf:unitless /></units>
      </prob-report-vs-time-since-outbreak>
    </detection-model>

    <resources-and-implementation-of-controls-model>
      <!-- No destruction  -->
      <destruction-program-delay>
        <value>0</value>
        <units><xdf:unit>day</xdf:unit></units>	
      </destruction-program-delay>
      <destruction-capacity>
        <value>0</value> <value>0</value>
        <units><xdf:unit>day</xdf:unit></units>
        <units><xdf:unit>herd</xdf:unit><xdf:unit power="-1">day</xdf:unit></units>
      </destruction-capacity>
      <destruction-priority-order>
        time waiting,reason,production type
      </destruction-priority-order>
      <!-- No vaccination -->
      <vaccination-program-delay>1</vaccination-program-delay>
      <vaccination-capacity>
        <value>0</value> <value>0</value>
        <units><xdf:unit>day</xdf:unit></units>
        <units><xdf:unit>herd</xdf:unit><xdf:unit power="-1">day</xdf:unit></units>
      </vaccination-capacity>
      <vaccination-priority-order>
        time waiting,reason,production type
      </vaccination-priority-order>
    </resources-and-implementation-of-controls-model>

    <quarantine-model>
    </quarantine-model>

    <conflict-resolver></conflict-resolver>

  </models>

</naadsm:disease-simulation>
