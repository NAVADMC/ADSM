set timeout 10
#
# expectations that clean up in case of error. Note that `$test' is
# a purely local variable.
#
# The first of these is used to match any bad responses, and resynchronise
# things by finding a prompt. The second is a timeout error, and shouldn't
# ever be triggered.
#
expect_after {
	-re "\[^\n\r\]*$prompt$" {
		fail "$test (bad match)"
		if { $verbose > 0 } {
			regexp ".*\r\n(\[^\r\n\]+)(\[\r\n\])+$prompt$" \
						$expect_out(buffer) "" output
			send_user "\tUnmatched output: \"$output\"\n"
		}
	}
	timeout {
		fail "$test (timeout)"
	}
}

#
# Test that the parameters are set correctly when a binomial
# distribution is created.
#
set test "create"
set true_n 7
set true_p 0.6
send "binomial ($true_n,$true_p)\n"
expect {
	-re "<binomial probability distribution\[\\n\\r\]+ n=($intpat) p=($floatpat)>.*$prompt$" {
		set n $expect_out(1,string)
		if { $n != $true_n } {
			fail "$test n should be $true_n, not $n"
		} else {
			set p $expect_out(2,string)
			if { [fcmp $p $true_p $epsilon] != 0 } {
				fail "$test p should be $true_p, not $p"
			} else {
				pass "$test"
			}
		}
	}
}



#
# Test the probability density function.  "Correct" values hand-calculated
# using formulas in "A Concise Summary of @RISK Probability Distribution
# Functions".
#
set xvalues {-1 0 1 2 3 4 5 6 7 8}
set answers { 0 0.0016384 0.0172032 0.0774144 0.193536 0.290304 0.2612736 0.1306368 0.0279936 0 }
pdf_test $xvalues $answers



#
# Test the cumulative distribution function and its inverse.  "Correct" values
# hand-calculated using formulas in "A Concise Summary of @RISK Probability
# Distribution Functions".
#
set xvalues {-1 0 1 2 3 4 5 6 7 8}
set answers {0 0.0016384 0.0188416 0.096256 0.289792 0.580096 0.8413696 0.9720064 1 1 }
cdf_test $xvalues $answers "cdf"



#
# Test random number generation.
#
set true_answer { 0 0.0016384 0.0172032 0.0774144 0.193536 0.290304 0.2612736 0.1306368 0.0279936 0 }
random_number_test $true_answer -1



#
# Test statistics.
#
#set min
#set max
#set mean 
#set variance
#statistics_test $min $max $mean $variance
sample_statistics_test
