from crispy_forms.helper import FormHelper
from crispy_forms.layout import Layout
from django.forms import Form, FileField, ClearableFileInput
from ScenarioCreator.forms import submit_button


class NonModelForm(Form):
    """Crispy forms base to keep the formatting consistent with the rest of the application, even though this is not
    a ModelForm.  That means there's no database backend supporting this form.  No models.py"""
    def __init__(self, *args, **kwargs):
        if not hasattr(self, 'helper'):  # so as not to override specific layouts
            self.helper = FormHelper()
            self.helper.non_field_errors = "Parsing failed"
            fields_and_submit = list(self.base_fields.keys()) + [submit_button()]
            self.helper.layout = Layout(*fields_and_submit)
        super(NonModelForm, self).__init__(*args, **kwargs)


class ImportForm(NonModelForm):
    parameters_xml = FileField(required=True,
                               widget=ClearableFileInput(attrs={'accept': '.xml'}),
                               help_text='An XML parameters file generated by the legacy NAADSM program from File > Export Scenario...')
    population_xml = FileField(required=True,
                               widget=ClearableFileInput(attrs={'accept': '.xml'}),
                               help_text='The population XML to match the parameters file.  This population should contain Production Types ' +
                                             'that match the names in the scenario file.')

    def _post_clean(self):
        super(ImportForm, self)._post_clean()
        #self.helper.form_error_title =
        setattr(self.helper, 'non_field_errors', "Parsing failed2")

        pass